/* ===========================================================================
    Copyright (c) 1996-2020 The ART Development Team
    ------------------------------------------------

    For a comprehensive list of the members of the development team, and a
    desaription of their respective contributions, see the file
    "ART_DeveloperList.txt" that is distributed with the libraries.

    This file is part of the Advanced Rendering Toolkit (ART) libraries.

    ART is free software: you can redistribute it and/or modify it under the
    terms of the GNU General Public License as published by the Free Software
    Foundation, either version 3 of the License, or (at your option) any
    later version.

    ART is distributed in the hope that it will be useful, but WITHOUT ANY
    WARRANTY; without even the implied warranty of MERCHANTABILITY or
    FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
    for more details.

    You should have received a copy of the GNU General Public License
    along with ART.  If not, see <http://www.gnu.org/licenses/>.
   ===========================================================================
    NAME:       SphereFlake
    TYPE:       art source
    PROJECT:    Advanced Rendering Toolkit - Demonstration Scenes
    CONTENT:    fractal sphere object 'sphere flake'
   ===========================================================================
    AUTHORS:    aw      Alexander Wilkie
                rft     Robert F. Tobler
   ===========================================================================
    HISTORY:

    18-May-16 22:41:00  aw      upgraded to ART 2 syntax
    30-Oct-97 15:20:15  rft     upgraded to 0.3.9 syntax
    01-Mar-97 00:00:00  aw      created
   ===========================================================================
    MANUAL:
    
    DESCRIPTION
        This module demonstrates the creation of a recursively defined
        object.  Note that we could create a more compact representation
        of the object, if we precomputed all transformations and just
        referenced them.  Then all transformations would only be present
        once in the '.art' file.
        
        This object has been around since the very beginning of the ART
        project, and therefore retains the old style file header for 
        nostalgic reasons.
=========================================================================== */

#define SPHEREFLAKE(_recursionDepth) \
    create_SphereFlake(art_gv,_recursionDepth)

ArNode * create_SphereFlake(
        ART_GV  * art_gv,
	int       recursionDepth
	)
{
    if ( recursionDepth > 0 )
    {
	id subFlake = SPHEREFLAKE(recursionDepth - 1);
	id contract = [USCALE(MATH_1_DIV_3) then: TRANSLATION_Z(4/3.0)];
	id contract_rot90 = [ contract then: ROT_X( 90 DEGREES)];	
	id contract_rot35 =
		[ contract then: ROT_X(MATH_PI_DIV_2 - acos(sqrt(3.0)/3.0))];

	return
	    UNION(
		SPHERE,
		[ subFlake trafo: contract_rot35 : ROT_Z( 30 DEGREES) ],
		[ subFlake trafo: contract_rot35 : ROT_Z(150 DEGREES) ],
		[ subFlake trafo: contract_rot35 : ROT_Z(270 DEGREES) ],
		[ subFlake trafo: contract_rot90                      ],
		[ subFlake trafo: contract_rot90 : ROT_Z( 60 DEGREES) ],
		[ subFlake trafo: contract_rot90 : ROT_Z(120 DEGREES) ],
		[ subFlake trafo: contract_rot90 : ROT_Z(180 DEGREES) ],
		[ subFlake trafo: contract_rot90 : ROT_Z(240 DEGREES) ],
		[ subFlake trafo: contract_rot90 : ROT_Z(300 DEGREES) ],
		UNION_END
                );
    }
    return SPHERE;
}

// ===========================================================================
