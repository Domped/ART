#import "SphereFlake.arm"

ArObj create_SphereFlakeOnCheckerboardTable(
        ART_GV  * art_gv
        )
{
    ArObj field = [ CUBE trafo: SCALE(2.0,2.0,0.2) : TRANSLATION(-1,-1, 0) ];

    ArObj blue   = LAMBERT_REFLECTOR( MUNSELL_050PB_07_08 );
    ArObj yellow = LAMBERT_REFLECTOR( MUNSELL_050Y_085_10 );
    ArObj yfield = [ field apply: yellow ];
    ArObj bfield = [ field apply: blue ];

    ArObj eighth =
        UNION(
            [ bfield trafo: TRANSLATION(-1,-1,0) ],
            [ yfield trafo: TRANSLATION(-1, 1,0) ],
            [ yfield trafo: TRANSLATION( 1,-1,0) ],
            [ bfield trafo: TRANSLATION( 1, 1,0) ],
            UNION_END
            );

    ArObj quarter =
        UNION(
            [ eighth trafo: TRANSLATION(-2,-2,0) ],
            [ eighth trafo: TRANSLATION(-2, 2,0) ],
            [ eighth trafo: TRANSLATION( 2,-2,0) ],
            [ eighth trafo: TRANSLATION( 2, 2,0) ],
            UNION_END
            );

    ArObj half =
        UNION(
            [ quarter trafo: TRANSLATION(-4,-4,0) ],
            [ quarter trafo: TRANSLATION(-4, 4,0) ],
            [ quarter trafo: TRANSLATION( 4,-4,0) ],
            [ quarter trafo: TRANSLATION( 4, 4,0) ],
            UNION_END
            );

    ArObj board =
        UNION(
            [ half trafo: TRANSLATION(-8,-8,0) ],
            [ half trafo: TRANSLATION(-8, 8,0) ],
            [ half trafo: TRANSLATION( 8,-8,0) ],
            [ half trafo: TRANSLATION( 8, 8,0) ],
            UNION_END
            );

    board =
        [ board apply
            :   USCALE(1.5)
            :   TRANSLATION( 1.6, 0.9, 0.25)
            ];

    ArObj wood = LAMBERT_REFLECTOR( MACBETH_NEUTRAL65 );

    ArObj table =
        [ CUBE apply
            :   SCALE(90,90,0.5)
            :   TRANSLATION(-45,-45, 0.0)
            :   wood
            ];

    ArObj shell =
        [ SPHEREFLAKE(4) apply
            :   USCALE(1.5)
            :   TRANSLATION(1.0, -5.9, 2.5)
            //:   TORRANCE_SPARROW_BLINN_COPPER( 0.089 )
            :   TORRANCE_SPARROW_BLINN_SURFACE_CONST( 0.089 )
            ];

    return UNION( shell, table, board, UNION_END );
}


ArNode <ArpCamera> * create_SphereFlakeCamera(
        ART_GV  * art_gv
        )
{
    return
    [ CAMERA
	imageSize: IVEC2D( 800, 600 )
	ray:       RAY3D(PNT3D(12.74,-41.90,26.96),VEC3D(-2.84,8.56,-5.80))
	zoom:      4.48
    ];
}

#ifndef SAMPLES
#define SAMPLES 32
#endif

ArNode <ArpActionSequence> *  create_SphereFlakeActionSequence(
        ART_GV  * art_gv
        )
{
    id actionsequence =
        ACTION_SEQUENCE(
            CREATE_STANDARD_RAYCASTING_ACCELERATION_STRUCTURE,

            [ LIGHTSOURCE_COLLECTOR
                sampler2D:   STANDARD_SAMPLER_2D
                resolution:  5
                type:        arlightsourcetype_area
            ],

            [ STOCHASTIC_PIXEL_SAMPLER
                sampleProvider:
                    [ PATHTRACER
                        rayCaster:        STANDARD_RAYCASTER
			maximalRecursion: 6
                    ]
                sampleSplattingKernel: TENT_KERNEL
                samplesPerPixel:       SAMPLES
                randomValueGeneration: PSEUDORANDOM_SEQUENCE
            ],

            [ IMAGECONVERSION_RAW_TO_ARTCSP
                removeSource: NO
            ],

            STANDARD_GLOBAL_TONEMAPPING_OPERATOR,
                        
            STANDARD_LUMINANCE_CLIPPING,

            [ IMAGECONVERSION_ARTCSP_TO_TIFF
                removeSource:    YES
                bitsPerChannel:  8
                ],
            
            ACTION_SEQUENCE_END 
            );

    return actionsequence;
}

ARM_MAIN_FUNCTION(SphereFlakeScene)
{
#ifdef DIFFUSE_ILLUMINATION
    id environmentMaterial = UNIFORM_ENVIRONMENT_MATERIAL( CIE_ILLUMINANT_D65, 1.0 );
#endif

    id result =
    [ SCENE
    	sceneGeometry: create_SphereFlakeOnCheckerboardTable(art_gv)
#ifdef DIFFUSE_ILLUMINATION
        environmentMaterial   : environmentMaterial
#else
	skyModel:  [ HOSEK_SKYLIGHT
            elevation   : 25 DEGREES
            azimuth     : 220.0 DEGREES
            turbidity   : 4.0
            groundAlbedo: CONST_COLOUR_GREY(0.5)
            ]
#endif
	camera:		create_SphereFlakeCamera(art_gv)
        actionSequence: create_SphereFlakeActionSequence(art_gv)
    ];

    return result;
}
